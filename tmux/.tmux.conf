set -g default-terminal "tmux-256color"
# set -g default-terminal xterm

set -g prefix C-b
# unbind C-b # 接触C-b的绑定

# set-option -g prefix2 ` # 设置第二个前缀按键为`

# 绑定加载配置文件的快捷键为r
bind r source-file ~/.tmux.conf \; display-message "config reloaded.."

unbind '"'
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
unbind %
bind | splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

#面板切换
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind -r ^k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -r ^j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -r ^h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -r ^l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

# if-shell 'test "$(uname -s)" = Linux' 'set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"'
set-option -g default-shell /usr/bin/zsh

setw -g mode-keys vi # 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键

bind Escape copy-mode # 绑定esc键为进入复制模式
# start selecting text typing 'v' key (once you are in copy mode)
bind-key -t vi-copy v begin-selection
# copy selected text to the system's clipboard
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind p pasteb # 绑定p键为粘贴文本（p键默认用于进入上一个窗口，不建议覆盖）


# buffer缓存复制到Mac系统粘贴板
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# Mac系统粘贴板内容复制到会话
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"


# 备份tmux
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux

# 启动服务
set -g @continuum-boot-options 'iterm'
set -g @continuum-boot-options 'iterm,fullscreen'

set -g base-index 1 # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1

#set -g status-utf8 on # 状态栏支持utf8
set -g status-interval 1 # 状态栏刷新时间
set -g status-justify left # 状态栏列表左对齐
setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知

set -g status-bg black # 设置状态栏背景黑色
set -g status-fg yellow # 设置状态栏前景黄色
set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

set -g status-left "#[bg=#FF661D] #H❐ #S " # 状态栏左侧内容
set -g status-left-length 300 # 状态栏左边长度300
set -g status-right-length 500 # 状态栏左边长度500

set -wg window-status-format " #I #W " # 状态栏窗口名称格式
set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式
set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式

set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色

set -g mouse on

set-option -g history-limit 10000

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect' #安装tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-continuum' #安装tmux-continuum
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# @resurrect
set -g @resurrect-capture-pane-contents 'on' #恢复面板内容
set -g @resurrect-strategy-vim 'session' #恢复vim会话状态
set -g @resurrect-save 'S'
set -g @resurrect-capture-pane-contents 'on' # 开启恢复面板内容功能
set -g @resurrect-save-shell-history 'on'

# @continuum
set -g @continuum-save-interval '30' #保存间隔
# set -g @continuum-save-interval '0' #关闭自动保存
set -g @continuum-restore 'on' # 启用自动恢复
set -g status-right 'Continuum status: #{continuum_status}' # 状态栏右侧内容

# 更快的响应时间
set -sg escape-time 1


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# 状态栏
  # 颜色
#  set -g status-bg black
#  set -g status-fg white
#
#  # 对齐方式
#  set-option -g status-justify centre
#
#  # 左下角
#  set-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'
#  set-option -g status-left-length 20
#
#  # 窗口列表
#  setw -g automatic-rename on
#  set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
#  set-window-option -g window-status-current-format '#[fg=cyan,bold]#I#[fg=blue]:#[fg=cyan]#W#[fg=dim]'
#
#  # 右下角
#  set -g status-right '#[fg=green][#[fg=cyan]%Y-%m-%d#[fg=green]]'
